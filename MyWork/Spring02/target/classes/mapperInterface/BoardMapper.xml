<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapperInterface.BoardMapper">

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  

** interface 를 통해 ~Mapper 접근
=> interface ~Mapper.java 의 패키지명 & 화일명과  
   ~Mapper.xml 의 패키지명 & 화일명 & namespace 값은 같아야됨. 
   
=> namespace: 자바클래스에서 mapper를 찾는 경로
           다른 mapper와 중복되지 않도록 네임스페이스 기재   

*** mapper 기본문법 
1) #{id} : parameter 로 전달된 vo 의 id 라는 컬럼의 value 가 전달됨  
         -> getId() 로 처리함, Map의 경우 키값이 id 인 값을 찾음.
          
2) ${id} : 필드를 표현 (매개변수로 전달된 객체의 id 컬럼의 값을 table의 컬럼으로 인식하고 적용함)    
         
3) CDATA : XML에서는  <,>등 비교연산자의 경우 XML규칙상 에러 나기 때문에,
         이 기호를 연산자로 인식하도록 하기 위해서는 SQL문을 CDATA로 묶어 주어야 한다.
         
         <![CDATA[ SELECT * FROM table WHERE jno < 5 ]]>
         
4) 조건문, 반복문, sql, include, selectKey 등    
      
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<!-- selectList -->
<select id="selectList" resultType="domain.BoardDTO">
	select * from board order by root desc, step asc
</select>

<!-- ====================================================================================== -->

<!-- selectOne 
	=> seq 의 비교값을 할당 = (?를 처리해줘야함)	-->
<select id="selectOne" resultType="domain.BoardDTO">
	select * from board where seq=#{seq}
</select>

<!-- ====================================================================================== -->

<!-- ** selectKey Test 
=> AutoNumbering 을 편리하게 할 수 있도록 지원
=> DB작업중 먼저 어떤 키값을 가져와서 증가시켜서 입력하거나 혹은 입력후에 증가된 키값을 가져올 필요가 있을때마다.
   selectKey Tag를 이용하면 별도의 쿼리로직 없이 해당 메소드에서 일괄처리할 수가 있음.
   - keyProperty: selectKey구문의 결과가 셋팅될 대상을 지정
               ( 즉, 매개변수로 전달된 vo의 컬럼중 결과가 셋팅될 컬럼 선택 )     
   - resultType: 결과의 타입.
   - order: BEFORE 또는 AFTER
            BEFORE로 설정하면 키를 먼저 조회하고 그 값을 keyProperty 에 셋팅한 뒤 insert 구문실행.
            AFTER로 설정하면 insert 구문을 실행한 뒤 selectKey 구문 실행.
            오라클에서는 insert구문 내부에서 일관된 호출형태로 처리한다.
   - statementType: STATEMENT, PREPARED 또는 CALLABLE중 하나 선택가능.
            마이바티스에게 Statement, PreparedStatement 또는 CallableStatement를 사용하게 한다.
            디폴트는 PREPARED.
     
=> Oracle 의 경우:  (select nvl(max(seq),0)+1 from board)  
--> 
<!--  ** 원글 insert 
	  => 원글 입력 : seq 와 root 동일, step=0, indent=0
	  => 그러므로 자동으로 생성되는 seq를 root 에 전달할 필요성 -->
<insert id="insert" >
	<selectKey keyProperty="seq" resultType="int" order="BEFORE">
		select IFNULL(max(seq), 0) + 1 from board
	</selectKey>
	insert into board(seq, id, title, content, root) 
	values ( #{seq}, #{id}, #{title}, #{content}, #{seq} )
</insert>

<!-- ====================================================================================== -->

<!--  ** update -->
<update id="update">
	update board set title=#{title}, content=#{content}, cnt=#{cnt} where seq=#{seq}
</update>

<!-- ====================================================================================== -->

<!-- ** delete 
   => 원글삭제 : 답글들도 모두 삭제 ( 원글 seq (=root) 와 동일한 root 를 가진 Data 모두 삭제 root = #{seq})
   => 답글삭제 : 해당 답글만 삭제  ( 해당 seq 만 삭제 seq = #{seq} )
   => 원글(seq, root 동일) / 답글(seq, root 다름)  구분 필요  
      그러므로 삭제요청시 root 값 필요 -->
<delete id="delete">
	delete from board where 
		<if test="seq == root">
			root = #{seq}
			<!-- 원글삭제 : 동일한 root 자료 모두 삭제 -->
		</if>
		<if test="seq != root">
			seq=#{seq}
			<!-- 해당 답글만 삭제 -->
		</if>
</delete>

<!-- ====================================================================================== -->

<!-- **답글등록
	 => rinsert, stepUpdate -->
<insert id="rinsert">
	<selectKey keyProperty="seq" resultType="int" order="BEFORE">
		select IFNULL(max(seq), 0) + 1 from board
	</selectKey>
	insert into board(seq, id, title, content, root, step, indent)
	values ( #{seq}, #{id}, #{title}, #{content}, #{root}, #{step}, #{indent} )
</insert>

<!-- 직전에 입력된 Data 는 update 에서 제외시켜주기 위해 "resultKey" 가 필요함 -->
<update id="stepUpdate">
	<selectKey keyProperty="seq" resultType="int" order="BEFORE">
		select IFNULL(max(seq),0) from board
	</selectKey>
	update board set step = step + 1 
	where root = #{root} and step >= #{step} and seq != #{seq}
</update>
</mapper>