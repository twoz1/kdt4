package J04_array;


	//**배열 활용 (섞기 Shuffle)
	//=> 길이가 10인 배열 정의 하고, 0~9 로 초기화
	//=> random 을 이용해서 배열의 임의의 위치에 있는 배열의 값과
	//   배열의 첫번째(0) 값과 교환하는일을 100번 반복해서 배열을 
	//   뒤섞이도록 한후, 출력하기.
	//=> 교재 139p 

	// ** 복습: 연습문제 5-4
	// ** 예습: 교재6장 160p~175p 를 읽고
	// => 클래스, 객체, 인스턴스를 간단히 비교 & 요약 해오세요 ~~ 

	//   !!!!!!!!!!!!!!!!! 요약 !!!!!!!!!!!!!!!!!!
	//	   
	//	    클래스? 객체를 정의해놓은 것
	//	  	클래스의 용도? 객체를 생성하는데 사용되며, 객체는 클래스에 정의된 대로 생선된다.
	//	  
	//	 
	//	 	객체란? 실제로 존재하는 것 프로그래밍에서의 객체는 클래스에 정의된 내용대로 메모리에 생성된 것
	//	 	유형의 객체 - 책상, 의자 사물
	//	 	무형의 객체 - 수학공식, 프로그램 에러와 같은 논리나 개념
	//
	//	  	객체를 사용한다는 것은 객체가 가지고 있는 속성과 기능을 사용한다는 뜻
	//	  
	//	  	객체의 구성요소
	//	 	
	//	 	객체는 속성과 기능, 두 종류의 구성요소로 이루어져 있으며, 일반적으로 객체는 다수의 속성과 다수의 기능을 갖는다.
	//	  	즉 객체는 속성과 기능의 집합이라고 할 수 있다.
	//	 	그리고 객체가 가지고 있는 속성과 기능을 그 객체의 멤버라 한다.
	//	  
	//	  	객체 지향 프로그래밍에서는 속성과 기능을 각각 변수와 메서드로 표현함.
	//	  
	//	  	속성(Property) -> 멤버변수(Variable)
	//	  	기능(Funtion)  -> 메서드(Method)
	//	  
	//	  	인스턴스란? 클래스로부터 객체를 만드는 과정을 클래스의 인스턴스화라고 하며,
	//	  	어떤 클래스부터 만들어진 객체를 그 클래스의 인스턴스 라고 함
	//	  	
	//	  	객체와 인스턴스의 차이점 
	//	  	객체 - 객체는 모든 인스턴스를 대표하는 포괄적인 의미를 갖고 있음.
	//	  	인스턴스 - 인스턴스는 어떤 클래스로부터 만들어진 것인지를 보다 강조하는 의미를 갖고있음.
	//	  
	//	    
    // !!!!!!!!!!!!!!!!! 연습문제 5-4 !!!!!!!!!!!!!!!!!

	public class Ex06_Shuffle {
		public static void main(String[] args) {
			int[][] arr ={
					{5,5,5,5,5},
					{10,10,10,10,10},
					{20,20,20,20,20},
					{30,30,30,30,30}
			};

			int total = 0;
			float average = 0;

			for (int i = 0; i < arr.length; i++) {
				for (int j = 0; j < arr[i].length; j++) {
					total += arr[i][j];
				}
			}
			System.out.println("total = "+total);
			average = total / (float)(arr.length * arr[0].length);
			System.out.println("average = " + average);
		}
	}